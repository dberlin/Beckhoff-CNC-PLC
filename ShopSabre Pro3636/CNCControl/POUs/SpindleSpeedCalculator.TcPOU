<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.16">
  <POU Name="SpindleSpeedCalculator" Id="{acb8e845-43b4-43c0-882b-b928a6ffba6b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM SpindleSpeedCalculator
VAR
	// Spindle speed in RPM
	SpindleSpeed : LREAL;
	// Current pulse count value from the counter
	PulseCount: UINT;
	// Counter value from previous time we read the counter
	LastCounterValue: UDINT;
	// Counter value from counter
	CounterValue AT %I*: UDINT;
	// Array of spindle speeds
	SpindleSpeeds : ARRAY[0..4] OF LREAL;
	MovingAverage : FB_MovingAverageReal;
END_VAR
VAR_TEMP
	TempSpindleSpeed: REAL;
END_VAR
VAR CONSTANT
	// Pulses per revolution of the spindle sensor
	PulsesPerRevolution : UINT := 4;
	// Task cycles per minute - task runs every 100ms
	TaskCyclesPerMinute : UINT := 600;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Convert counter value to pulses since last cycle
PulseCount := TO_UINT(CounterValue - LastCounterValue);
LastCounterValue := CounterValue;
// Extrapolate how pulses many would have occurred in a minute, then divide by pulses per revolution to get RPM.
TempSpindleSpeed := (TO_REAL(PulseCount) * TaskCyclesPerMinute) / PulsesPerRevolution;
MovingAverage(ValueToAdd := TempSpindleSpeed,
			  AverageArray := SpindleSpeeds);
SpindleSpeed := MovingAverage.CurrentValue;]]></ST>
    </Implementation>
    <LineIds Name="SpindleSpeedCalculator">
      <LineId Id="13" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="187" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="161" Count="1" />
      <LineId Id="57" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>