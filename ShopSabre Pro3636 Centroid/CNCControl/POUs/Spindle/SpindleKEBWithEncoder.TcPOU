<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="SpindleKEBWithEncoder" Id="{fed11a32-8341-4653-b826-dc853a6adbc2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SpindleKEBWithEncoder EXTENDS SpindleCIA402Velocity IMPLEMENTS SpindleController
VAR_INPUT
END_VAR
VAR_OUTPUT
	// This represents the digital inputs of the KEB drive
	// Bit 0 resets the error state
	oDigitalInputs AT %Q* : UINT;
	// Encoder error state
	// Anything other than 0 is an error
	iEncoderErrorState AT %I* : UINT;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="HasFault" Id="{ea71f003-3137-4871-9323-4a33a4218fbf}">
      <Declaration><![CDATA[METHOD HasFault : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[HasFault := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stop" Id="{a392b421-edcf-4148-9040-0ef4e6951966}">
      <Declaration><![CDATA[METHOD Stop : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// The 1024ppr encoder is only good to 12000rpm, so if you go faster, it will get an error that needs to be reset.
// This resets the error state (but only when the spindle is safely stopped)
IF iEncoderErrorState <> 0  AND GetState() = E_CIA402State.SwitchOnDisabled THEN
	oControlWord.FaultReset := TRUE;
ELSE
	oControlWord.FaultReset := FALSE;
	SUPER^.Stop();
END_IF

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="SpindleKEBWithEncoder">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="SpindleKEBWithEncoder.HasFault">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="SpindleKEBWithEncoder.Stop">
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="6" />
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>