<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="MAIN" Id="{cd64af0a-d51b-49f0-91ce-918439305f15}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	{region "Air Pressure and Coolant"}
	// Air Pressure >90psi signal to PC Input 5
	oPCAirPressure AT %Q*: BOOL;
	// Air Pressure >90psi signal from sensor.  The sensor triggers as pressure is rising past 90psi
	iAirPressureSensor AT %I*: BOOL;
	// Control of NITRA Valves over ethernet/ip	 
	oValveControl AT %Q* : NitraValves; 
	// Turn on coolant signal from PC Output 4
	iPCCoolantOn AT %I* : BOOL;
	{endregion}
	{region "Vacuum"}
	VacuumControl: VacuumATV71Ethercat;
	 // Turn on vacuum signal from PC Output 2
	iPCVacuumOn AT %I* : BOOL;
	// Vacuum Pressure good output to PC Input 6
	oPCVacuumPressureGood AT %Q*: BOOL;
	{endregion}
	{endregion}
	{endregion}
	{region "Spindle variables"}
	{region "Spindle Speed Handling"}
	// True if spindle is at less than 1 RPM
	SpindleStopped : BOOL;
	// Spindle stopped output to PC pin 1
	oPCSpindleStopped AT %Q* : BOOL;
	// Spindle within 5% of speed to PC Pin 28
	oPCSpindleSpeedOK AT %Q* : BOOL;
	{endregion}
	{region "Spindle Tool Change handling"}
	// Tool Release Button on Spindle
	iSpindleToolReleaseButton AT %I*: BOOL;
	// Tool Release from PC Pin 24
	iPCToolRelease AT %I*: BOOL;
	// Tool Presence to PC Input 9
	oPCToolPresence AT %Q* : BOOL;
	// S1 Tool Presence sensor from the spindle
	iS1ToolPresence AT %I* : BOOL;
	// Collet Open to PC Input 8
	oPCColletOpen AT %Q* : BOOL;
	// S2 Collet Open sensor from the spindle
	iS2ColletOpen AT %I* : BOOL;	 
	// Spindle over temperature relay
	iSpindleNotOverTemp AT %I* : BOOL;
	// Does the spindle have any faults (over temp, VFD fault, etc)
	oPCSpindleOkay AT %Q*: BOOL;
	// Turn spindle on input from PC Output 3
	iPCSpindleOn AT %I* : BOOL;
	// Spindle direction from PC Output 8
	iPCSpindleDirection AT %I* : BOOL;
	SpindleControl : SpindleCIA402Velocity;
	{endregion}
	{endregion}
	{region "Input Debouncers"}
	CoolantOnDebounced : TON;
	SpindleOnDebounced : TON;
	ToolReleaseDebounced : TON;	
	VacuumOnDebounced : TON;
	{endregion}
END_VAR
VAR CONSTANT
	// Minimum PSI at which vacuum holding is viable for workpiece
	GoodVacuumPressure : REAL := 10.0;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[CoolantOnDebounced(IN := iPCCoolantOn, PT := T#3MS);
SpindleOnDebounced(IN := iPCSpindleOn, PT := T#3MS);
ToolReleaseDebounced(IN := iPCToolRelease, PT := T#3MS);
VacuumOnDebounced(IN := iPCVacuumOn, PT := T#3MS);

{region "Probe, Air Pressure, Coolant, Vacuum"}

// Pressure Control
	oPCAirPressure := iAirPressureSensor;

// Coolant control
	oValveControl.Coolant := CoolantOnDebounced.Q;

// Vacuum Control
	IF VacuumOnDebounced.Q THEN
		VacuumControl.Run();
	ELSE 
		VacuumControl.Stop();
	END_IF
	oPCVacuumPressureGood := VacuumControl.GetCurrentPressure() >= GoodVacuumPressure;

{endregion}
{region "Spindle handling"}
// Spindle Speed Handling
	// Spindle is stopped if it is under 1RPM
	SpindleStopped := SpindleSpeedCalculator.SpindleSpeed <= 1.0;
	oPCSpindleStopped := SpindleStopped;
	// Calculate whether spindle is up to speed.  We will only say it is up to speed if it is on.
	oPCSpindleSpeedOK := SpindleOnDebounced.Q AND_THEN (SpindleSpeedCalculator.SpindleSpeed  >= (0.95 * TO_REAL(DemandedSpeedTask.DemandedSpeed)));

// Spindle control handling
	 SpindleControl.SetDirection(iPCSpindleDirection);
	 // NOTE: HSK-F63 spindles may not be spun while the tool is not present
	 IF NOT (SpindleOnDebounced.Q AND iS1ToolPresence) THEN
	 	SpindleControl.SetSpeed(0);
		SpindleControl.Stop();
	 ELSIF SpindleOnDebounced.Q AND iS1ToolPresence THEN	  
	 	SpindleControl.SetSpeed(DemandedSpeedTask.DemandedSpeed);
		SpindleControl.Run();
	 END_IF
		  
	oPCSpindleOkay := iSpindleNotOverTemp AND NOT SpindleControl.HasFault();
// Spindle Tool Change handling
	oPCToolPresence := iS1ToolPresence;
	oPCColletOpen := iS2ColletOpen;
	oValveControl.ToolRelease := (iAirPressureSensor AND_THEN SpindleStopped) AND_THEN (ToolReleaseDebounced.Q OR iSpindleToolReleaseButton); 		  

{endregion}		  
{endregion}]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="5669" Count="40" />
      <LineId Id="5717" Count="0" />
      <LineId Id="5710" Count="2" />
      <LineId Id="5714" Count="2" />
      <LineId Id="3416" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>